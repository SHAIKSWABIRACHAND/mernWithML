{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reshv\\\\Downloads\\\\ps final\\\\otp-login-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport LoginPage from './components/LoginPage';\nimport SignupPage from './components/SignupPage';\nimport OtpVerificationPage from './components/OtpVerificationPage';\nimport PhonePage from './components/PhonePage'; // Import the new component\nimport HomePage from './components/HomePage'; // Import the new component\n\n// Authentication Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\n\n// Protected Route Component\n// const ProtectedRoute = ({ element: Component, isAuthenticated, ...rest }) => {\n//   return isAuthenticated ? <Component {...rest} /> : <Navigate to=\"/home\" />;\n// };\n\nfunction App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    // Check authentication status, e.g., via a token in localStorage\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      setIsAuthenticated(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      setIsAuthenticated\n    },\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          element: /*#__PURE__*/_jsxDEV(SignupPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/otp-verification\",\n          element: /*#__PURE__*/_jsxDEV(OtpVerificationPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/phone\",\n          element: /*#__PURE__*/_jsxDEV(PhonePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/home\",\n          element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JkS3Meyzlj18m4l86SBr9YDqEkQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","LoginPage","SignupPage","OtpVerificationPage","PhonePage","HomePage","jsxDEV","_jsxDEV","AuthContext","createContext","App","_s","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","Provider","value","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/reshv/Downloads/ps final/otp-login-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport LoginPage from './components/LoginPage';\nimport SignupPage from './components/SignupPage';\nimport OtpVerificationPage from './components/OtpVerificationPage';\nimport PhonePage from './components/PhonePage';  // Import the new component\nimport HomePage from './components/HomePage';    // Import the new component\n\n// Authentication Context\nconst AuthContext = React.createContext();\n\n// Protected Route Component\n// const ProtectedRoute = ({ element: Component, isAuthenticated, ...rest }) => {\n//   return isAuthenticated ? <Component {...rest} /> : <Navigate to=\"/home\" />;\n// };\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(() => {\n    // Check authentication status, e.g., via a token in localStorage\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      setIsAuthenticated(true);\n    }\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ isAuthenticated, setIsAuthenticated }}>\n      <Router>\n\n        <Routes>\n          <Route path=\"/\" element={<LoginPage />} />\n          <Route path=\"/signup\" element={<SignupPage />} />\n          <Route path=\"/otp-verification\" element={<OtpVerificationPage />} />\n          <Route path=\"/phone\" element={<PhonePage />} />\n          \n          {/* Protected Route for Home Page */}\n          <Route \n            path=\"/home\" \n            element={<HomePage/>} \n            \n          />\n        </Routes>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}