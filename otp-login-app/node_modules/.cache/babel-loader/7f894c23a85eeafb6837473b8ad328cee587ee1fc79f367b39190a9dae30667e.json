{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\owner\\\\Desktop\\\\final - Copy\\\\otp-login-app\\\\src\\\\components\\\\PhonePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PhonePage = () => {\n  _s();\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [phoneOtp, setPhoneOtp] = useState(''); //store phone number and otp entered by the user \n  const [isPhoneOtpSent, setIsPhoneOtpSent] = useState(false); //to check whether otp is sent(initially set to false)\n\n  const handlePhoneSubmit = async e => {\n    e.preventDefault();\n    const email = localStorage.getItem('email');\n    try {\n      await axios.post('http://localhost:5000/save-phone', {\n        email,\n        phoneNumber\n      }); //the phone number is saved locally\n      await axios.post('http://localhost:5000/send-phone-otp', {\n        phoneNumber\n      }); //used to send otp to the user \n      alert('Phone number submitted successfully. OTP sent to your phone.');\n      setIsPhoneOtpSent(true);\n    } catch (error) {\n      console.error('Phone number submission error', error);\n    }\n  };\n  const handleOtpSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5000/verify-phone-otp', {\n        //to verify whether the entered otp by user and the otp generated are the same or not \n        phoneNumber,\n        otp: phoneOtp\n      });\n      if (response.data.success) {\n        alert('Phone OTP verified successfully'); //if otp matches then user is redirected to home page \n        setIsAuthenticated(true);\n        navigate('/home');\n      } else {\n        alert('Invalid Phone OTP');\n      }\n    } catch (error) {\n      console.error('Phone OTP verification error', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phone Number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: isPhoneOtpSent ? handleOtpSubmit : handlePhoneSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: phoneNumber,\n        onChange: e => setPhoneNumber(e.target.value),\n        placeholder: \"Enter phone number\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), isPhoneOtpSent && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: phoneOtp,\n          onChange: e => setPhoneOtp(e.target.value),\n          placeholder: \"Enter OTP\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Verify OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), !isPhoneOtpSent && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Phone Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(PhonePage, \"5CGUsVz4w5ykVBW24ViBO9TxtQA=\");\n_c = PhonePage;\nexport default PhonePage;\nvar _c;\n$RefreshReg$(_c, \"PhonePage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","PhonePage","_s","phoneNumber","setPhoneNumber","phoneOtp","setPhoneOtp","isPhoneOtpSent","setIsPhoneOtpSent","handlePhoneSubmit","e","preventDefault","email","localStorage","getItem","post","alert","error","console","handleOtpSubmit","response","otp","data","success","setIsAuthenticated","navigate","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/owner/Desktop/final - Copy/otp-login-app/src/components/PhonePage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst PhonePage = () => {\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [phoneOtp, setPhoneOtp] = useState('');   //store phone number and otp entered by the user \r\n  const [isPhoneOtpSent, setIsPhoneOtpSent] = useState(false); //to check whether otp is sent(initially set to false)\r\n\r\n  const handlePhoneSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const email = localStorage.getItem('email');\r\n    try {\r\n      await axios.post('http://localhost:5000/save-phone', { email, phoneNumber }); //the phone number is saved locally\r\n      await axios.post('http://localhost:5000/send-phone-otp', { phoneNumber });//used to send otp to the user \r\n      alert('Phone number submitted successfully. OTP sent to your phone.');\r\n      setIsPhoneOtpSent(true);\r\n    } catch (error) {\r\n      console.error('Phone number submission error', error);\r\n    }\r\n  };\r\n\r\n  const handleOtpSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/verify-phone-otp', { //to verify whether the entered otp by user and the otp generated are the same or not \r\n        phoneNumber,\r\n        otp: phoneOtp,\r\n      });\r\n      if (response.data.success) {\r\n        alert('Phone OTP verified successfully'); //if otp matches then user is redirected to home page \r\n        setIsAuthenticated(true);\r\n\r\n        navigate('/home');\r\n      } else {\r\n        alert('Invalid Phone OTP');\r\n      }\r\n    } catch (error) {\r\n      console.error('Phone OTP verification error', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phone Number</h2>   \r\n      <form onSubmit={isPhoneOtpSent ? handleOtpSubmit : handlePhoneSubmit}> \r\n        <input\r\n          type=\"text\"\r\n          value={phoneNumber}\r\n          onChange={(e) => setPhoneNumber(e.target.value)}\r\n          placeholder=\"Enter phone number\"\r\n          required\r\n        />\r\n        {isPhoneOtpSent && (\r\n          <>\r\n            <input\r\n              type=\"text\"\r\n              value={phoneOtp}\r\n              onChange={(e) => setPhoneOtp(e.target.value)}\r\n              placeholder=\"Enter OTP\"\r\n              required\r\n            />\r\n            <button type=\"submit\">Verify OTP</button>\r\n          </>\r\n        )}\r\n        {!isPhoneOtpSent && <button type=\"submit\">Submit Phone Number</button>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhonePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}