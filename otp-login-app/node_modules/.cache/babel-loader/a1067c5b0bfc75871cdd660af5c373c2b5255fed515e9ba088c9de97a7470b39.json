{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\owner\\\\Desktop\\\\final - Copy\\\\otp-login-app\\\\src\\\\components\\\\OtpVerificationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OtpVerificationPage = () => {\n  _s();\n  const [emailOtp, setEmailOtp] = useState('');\n  const [phoneOtp, setPhoneOtp] = useState('');\n  const [verificationType, setVerificationType] = useState('email'); // Can be 'email' or 'phone'\n\n  const handleOtpSubmit = async e => {\n    e.preventDefault();\n    const endpoint = verificationType === 'email' ? 'http://localhost:5000/verify-email-otp' : 'http://localhost:5000/verify-phone-otp';\n    const otp = verificationType === 'email' ? emailOtp : phoneOtp;\n    try {\n      const response = await axios.post(endpoint, {\n        email: localStorage.getItem('email'),\n        // or phoneNumber based on verificationType\n        otp\n      });\n      if (response.data.success) {\n        alert('OTP verified successfully');\n        window.location.href = '/home';\n      } else {\n        alert('Invalid OTP');\n      }\n    } catch (error) {\n      console.error('OTP verification error', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Verify OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleOtpSubmit,\n      children: [verificationType === 'email' ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: emailOtp,\n        onChange: e => setEmailOtp(e.target.value),\n        placeholder: \"Enter Email OTP\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: phoneOtp,\n        onChange: e => setPhoneOtp(e.target.value),\n        placeholder: \"Enter Phone OTP\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(OtpVerificationPage, \"KcNrRT3Z8LCURBg2fk+WXeuoCJA=\");\n_c = OtpVerificationPage;\nexport default OtpVerificationPage;\nvar _c;\n$RefreshReg$(_c, \"OtpVerificationPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","OtpVerificationPage","_s","emailOtp","setEmailOtp","phoneOtp","setPhoneOtp","verificationType","setVerificationType","handleOtpSubmit","e","preventDefault","endpoint","otp","response","post","email","localStorage","getItem","data","success","alert","window","location","href","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/owner/Desktop/final - Copy/otp-login-app/src/components/OtpVerificationPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst OtpVerificationPage = () => {\r\n  const [emailOtp, setEmailOtp] = useState('');\r\n  const [phoneOtp, setPhoneOtp] = useState('');\r\n  const [verificationType, setVerificationType] = useState('email'); // Can be 'email' or 'phone'\r\n  \r\n  const handleOtpSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    const endpoint = verificationType === 'email' \r\n      ? 'http://localhost:5000/verify-email-otp'\r\n      : 'http://localhost:5000/verify-phone-otp';\r\n    \r\n    const otp = verificationType === 'email' ? emailOtp : phoneOtp;\r\n\r\n    try {\r\n      const response = await axios.post(endpoint, {\r\n        email: localStorage.getItem('email'), // or phoneNumber based on verificationType\r\n        otp\r\n      });\r\n      \r\n      if (response.data.success) {\r\n        alert('OTP verified successfully');\r\n        window.location.href = '/home';\r\n      } else {\r\n        alert('Invalid OTP');\r\n      }\r\n    } catch (error) {\r\n      console.error('OTP verification error', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Verify OTP</h2>\r\n      <form onSubmit={handleOtpSubmit}>\r\n        {verificationType === 'email' ? (\r\n          <input\r\n            type=\"text\"\r\n            value={emailOtp}\r\n            onChange={(e) => setEmailOtp(e.target.value)}\r\n            placeholder=\"Enter Email OTP\"\r\n            required\r\n          />\r\n        ) : (\r\n          <input\r\n            type=\"text\"\r\n            value={phoneOtp}\r\n            onChange={(e) => setPhoneOtp(e.target.value)}\r\n            placeholder=\"Enter Phone OTP\"\r\n            required\r\n          />\r\n        )}\r\n        <button type=\"submit\">Verify OTP</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OtpVerificationPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;;EAEnE,MAAMY,eAAe,GAAG,MAAOC,CAAC,IAAK;IACnCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,QAAQ,GAAGL,gBAAgB,KAAK,OAAO,GACzC,wCAAwC,GACxC,wCAAwC;IAE5C,MAAMM,GAAG,GAAGN,gBAAgB,KAAK,OAAO,GAAGJ,QAAQ,GAAGE,QAAQ;IAE9D,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAACH,QAAQ,EAAE;QAC1CI,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAAE;QACtCL;MACF,CAAC,CAAC;MAEF,IAAIC,QAAQ,CAACK,IAAI,CAACC,OAAO,EAAE;QACzBC,KAAK,CAAC,2BAA2B,CAAC;QAClCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,OAAO;MAChC,CAAC,MAAM;QACLH,KAAK,CAAC,aAAa,CAAC;MACtB;IACF,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,oBACEzB,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnB/B,OAAA;MAAMgC,QAAQ,EAAEvB,eAAgB;MAAAkB,QAAA,GAC7BpB,gBAAgB,KAAK,OAAO,gBAC3BP,OAAA;QACEiC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE/B,QAAS;QAChBgC,QAAQ,EAAGzB,CAAC,IAAKN,WAAW,CAACM,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE;QAC7CG,WAAW,EAAC,iBAAiB;QAC7BC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,gBAEF/B,OAAA;QACEiC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE7B,QAAS;QAChB8B,QAAQ,EAAGzB,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE;QAC7CG,WAAW,EAAC,iBAAiB;QAC7BC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CACF,eACD/B,OAAA;QAAQiC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAxDID,mBAAmB;AAAAsC,EAAA,GAAnBtC,mBAAmB;AA0DzB,eAAeA,mBAAmB;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}